import os
from dataclasses import dataclass
from pych_client import ClickHouseClient
from collections import defaultdict
from typing import Iterable, Iterator, Tuple
from ipaddress import ip_network, IPv6Network, IPv4Network
from diamond_miner.defaults import (
    DEFAULT_FAILURE_RATE,
    DEFAULT_PREFIX_LEN_V4,
    DEFAULT_PREFIX_LEN_V6,
    PROTOCOLS,
    UNIVERSE_SUBSET,
)
from diamond_miner.format import format_ipv6
from diamond_miner.generators.standalone import split_prefix
from diamond_miner.insert import InsertPreProbes,InsertByPreProbes
from diamond_miner.queries.query import Query, probes_table, clusterprobes_table, weight_table
from diamond_miner.subsets import subsets_for
from diamond_miner.typing import IPNetwork
import time
import math
## TODO : rewrite this function using asprobes inner join group_mapping
def insert_as_probe(client: ClickHouseClient, 
                    measurement_id: str, 
                    round_: int,
                    prefix_len_v4: int = DEFAULT_PREFIX_LEN_V4,
                    prefix_len_v6: int = DEFAULT_PREFIX_LEN_V6,
                    change_round: int = 6):
    
    client.json(f"""
    INSERT INTO {probes_table(measurement_id)}
        SELECT probe_protocol, probe_dst_prefix, probe_ttl, sum(ceil(cumulative_probes*proportion)) as cumulative_probes, round 
        FROM {clusterprobes_table(measurement_id=measurement_id)}
        LEFT JOIN {weight_table(measurement_id=measurement_id)} 
        USING cluster_id, probe_ttl, round
        WHERE round={round_}
        GROUP BY probe_dst_prefix, probe_ttl, probe_protocol, round        
    """)
